@startuml

title emfviews.core

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' EMF Package

package EMF #DDDDDD {

  interface Resource {
    +load()
    +save()
    +getContents()
    +getResourceSet()
  }

  class ResourceImpl {
    #doLoad()
    #doSave()
    +getContents()
    +getResourceSet()
  }

  class EStoreEObjectImpl {
  }

  interface EStore {
    +get(EObject, EStructuralFeature, int): Object
    +set(EObject, EStructuralFeature, int, Object): Object
  }

  interface EObject {
  }

  interface EStructuralFeature {
  }

  interface ResourceSet {
  }

}

hide EObject members
hide EStructuralFeature members
hide EStoreEObjectImpl members
hide ResourceSet members

Resource <|.. ResourceImpl
EStoreEObjectImpl ..> EStore

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' VirtualLinks package

package emfviews.virtuallinks {

  interface VirtualLinks {
  }

  interface VirtualLink {
    +getName(): String
  }

  interface Filter {
  }

  interface Association {
  }

  interface LinkedElement {
    +getElementRef(): String
    +getModelRef(): String
  }

}

hide VirtualLinks members
hide Filter members
hide Association members

VirtualLinks "1" *-- "0..*" VirtualLink   /': virtualLinks '/
VirtualLinks "1" *-- "0..*" LinkedElement /': linkedElements '/

VirtualLink <|.. Association
VirtualLink <|.. Filter

Association --> "1" LinkedElement    /' : sourceElement '/
Association --> "0..*" LinkedElement /' : targetElements '/

Filter --> "1" LinkedElement    /' : filteredElement '/

/' hide VirtualLinks   '/

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' EMFViews.elements/rules

abstract class VirtualElement {
}

class ReproduceElementImpl {
}

class VirtualAssociation {
  +get(int): Object
  +set(EObject, int): Object
}

abstract class TranslationRule {
}

class ReproduceRule <<Singleton>> {
  +get(EObject, ...)
  +set(EObject, ...)
}

class VirtualModelList<E> {
  +get(int): E
  +size(): int
}


hide VirtualElement members
hide ReproduceElementImpl members
hide TranslationRule members

EStoreEObjectImpl <|-- VirtualElement
VirtualElement <|-- ReproduceElementImpl
VirtualElement "1" o-- "1" TranslationRule /' : translationRule '/

ReproduceElementImpl o-- "1" EObject               /' : concreteElement '/
ReproduceElementImpl o-- "0..*" VirtualAssociation /' : virtualAssociations '/
ReproduceElementImpl o-- "1" ReproduceRule         /' : translationRule '/
ReproduceElementImpl ..> View
ReproduceElementImpl ..> MetamodelManager
/' ReproduceElementImpl ..> EStructuralFeature '/

VirtualAssociation --> "1" EObject            /' : container '/
VirtualAssociation --> "0..*" EObject         /' : referencedElements '/
VirtualAssociation --> "1" EStructuralFeature /' : virtualFeature '/
VirtualAssociation ..> View

EStore <|.. TranslationRule
TranslationRule <|-- ReproduceRule

ReproduceRule ..> View
ReproduceRule ..> MetamodelManager
ReproduceRule ..> VirtualModelList
ReproduceRule ..> VirtualAssociation

VirtualModelList --> "1" View   /' : virtualModel '/
VirtualModelList ..> VirtualLinkManager

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' EMFViews.core

abstract class View {
  #contributingModelsURIs: String
  #contributingMetamodelsURIs: String
  #doSave()
  +getContents()
  #setVirtualContents()
  +translateToVirtualElement(EObject): EObject
}

class Viewpoint {
  -contributingEPackages: List<EPackage>
  #doLoad()
  #doSave()
  +getContents()
  +getResourceSet()
}

class EView {
  #doLoad()
}

class VirtualLinkManager {
  +initialize()
  +getVirtualElement(EObject): EObject
}

class MetamodelManager {
  -contributingMetamodels: List<EPackage>
  -buildMaps()
  +getVirtualAssociation(EObject, String name): EStructuralFeature
  +translateToVirtualFeature(EObject, EStructuralFeature): EStructuralFeature
  +translateFromVirtualFeature(EObject, EStructuralFeature): EStructuralFeature
}

class LinksProjector {
  +load(VirtualLinks)
}

class VirtualLinksDelegator {
  +createVirtualModelLinks(URI, List<Resource>)
}

interface IVirtualLinksDelegate {
  +createVirtualModelLinks(String, URI, List<Resource>)
}

class EclDelegate {
  +createVirtualModelLinks(String, URI, List<Resource>)
}

/'
 ' note left
 '   Created by VirtualLinkManager and
 '   discarded after it has created
 '   ReproduceElement for each Association
 ' end note
 '/

class VirtualContents<E> {
  +get(int): E
  +set(int, E)
  +size(): int
}

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Relationships

ResourceImpl <|-- View
View "1" -left "1" VirtualLinkManager
View "1" -right "1" MetamodelManager
View "1" -- "1" VirtualContents
View o-- "1" ResourceSet

View <|-- EView
EView --> "1" Viewpoint              /' : viewpoint '/
EView ..> VirtualLinkManager
EView ..> MetamodelManager
EView ..> VirtualLinksDelegator

VirtualLinksDelegator *-- "1" IVirtualLinksDelegate

IVirtualLinksDelegate <|.. EclDelegate

EclDelegate ..> VirtualLinks
EclDelegate ..> Association
EclDelegate ..> LinkedElement

ResourceImpl <|-- Viewpoint
Viewpoint o-- "1" ResourceSet   /' : virtualResourceSet '/
Viewpoint "1" -- "1" VirtualContents
Viewpoint ..> VirtualLinks
Viewpoint ..> Association
Viewpoint ..> LinkedElement
Viewpoint ..> Filter

MetamodelManager --> "1" Viewpoint /' viewpoint '/
MetamodelManager --> "1" View /' virtualModel '/
MetamodelManager ..> ReproduceElementImpl

VirtualLinkManager --> "1" VirtualLinks /' weavingModel '/
VirtualLinkManager ..> ReproduceElementImpl
VirtualLinkManager ..> LinksProjector

LinksProjector --> "1" View     /'virtualModel '/
LinksProjector ..> VirtualLinkManager
LinksProjector ..> MetamodelManager
LinksProjector ..> VirtualLinks
LinksProjector ..> Association
LinksProjector ..> LinkedElement
LinksProjector ..> ReproduceElementImpl

@enduml


'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Sequence diagram for LinksProjector

@startuml

title LinksProjector.loadAssociations

LinksProjector -> VirtualLinkManager : getVirtualElement
activate VirtualLinkManager

create ReproduceElementImpl
VirtualLinkManager -> ReproduceElementImpl : new
VirtualLinkManager -> LinksProjector
deactivate VirtualLinkManager

LinksProjector -> MetamodelManager : getVirtualAssociation
activate MetamodelManager
MetamodelManager -> MetamodelManager : virtualAssociations
MetamodelManager -> LinksProjector
deactivate MetamodelManager

LinksProjector -> ReproduceElementImpl : setVirtualAssociation
activate ReproduceElementImpl

create VirtualAssociation
ReproduceElementImpl -> VirtualAssociation : new
ReproduceElementImpl -> ReproduceElementImpl : virtualAssociations
deactivate ReproduceElementImpl

@enduml
